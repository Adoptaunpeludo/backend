name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Docker auth
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKER_USER }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: Build and push Docker Image
      uses: docker/build-push-action@v2
      with:
        context: ./
        push: true
        dockerfile: ./Dockerfile
        tags: jaderodev/aup-backend:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Docker auth
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKER_USER }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: Set permissions for private key
      run: |
        echo "${{ secrets.AWS_PRIVATE_KEY }}" > key.pem
        chmod 600 key.pem

    - name: Stop runnin containers
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@3.82.157.13 'ls -l'
    #     ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@3.82.157.13 'sudo docker compose down'

    # - name: Remove old image
    #   run: |
    #     ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@3.82.157.13 'sudo docker image rm -f backend-aup-backend:latest'

    # - name: Run new containers
    #   run: |
    #     ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@3.82.157.13 'sudo docker compose up -d'
    
    

